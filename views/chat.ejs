<!-- views/chat.ejs -->
<!DOCTYPE html>
<html lang="en" class="h-full">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dr. Ambedkar's Writings - Interactive Analysis</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        #app-container {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        #main-content {
            flex: 1;
            display: flex;
            flex-direction: column;
            padding: 2rem 1rem;
        }

        #chat-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            max-width: 4xl;
            margin: 0 auto;
            width: 100%;
        }

        #messages-and-input {
            flex: 1;
            display: flex;
            flex-direction: column;
            background: white;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 1.5rem;
            min-height: calc(100vh - 200px);
        }

        .loading-spinner {
            width: 24px;
            height: 24px;
        }
    </style>
</head>
<body>
    <div id="app-container">
        <!-- Header -->
        <header class="bg-blue-900 text-white py-6 shadow-lg">
            <div class="container mx-auto px-4">
                <div class="flex items-center justify-between">
                    <div>
                        <h1 class="text-3xl font-bold">Ask Babsahaheb</h1>
                        <p class="text-blue-200">Dr. Ambedkar's Writings</p>
                    </div>
                    <div class="w-36 h-16 rounded-full bg-white flex items-center justify-center">
                        <img src="/ab.png" alt="Dr. Ambedkar">
                    </div>
                </div>
            </div>
        </header>

        <!-- Main Content -->
        <div id="main-content">
            <div id="chat-container">
                <div id="messages-and-input">
                    <!-- Chat Messages Container -->
                    <div id="chat-messages" class="flex-1 space-y-4 mb-6 overflow-y-auto p-4 bg-gray-50 rounded-lg">
                        <% if (locals.messages && messages.length > 0) { %>
                            <% messages.forEach(function(message) { %>
                                <div class="message <%= message.role %>">
                                    <%- message.content %>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>
                    
                    <!-- Input Form -->
                    <form id="chat-form" class="flex gap-4 mt-4">
                        <input type="text" 
                               id="question" 
                               placeholder="Ask about Dr. Ambedkar's insights..." 
                               class="flex-1 px-4 py-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                               required>
                        <button type="submit" 
                                class="bg-blue-600 text-white px-8 py-3 rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2">
                            <span class="button-text">Ask</span>
                            <svg class="w-5 h-5 button-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"/>
                            </svg>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        const chatForm = document.getElementById('chat-form');
        const chatMessages = document.getElementById('chat-messages');
        const documentKey = '<%= documentKey %>';
        let isLoading = false;

        function createMessageElement(role, content, context = null) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `p-4 rounded-lg ${
                role === 'user' 
                    ? 'bg-blue-100 ml-12 border-l-4 border-blue-400' 
                    : role === 'error'
                        ? 'bg-red-100 border-l-4 border-red-400'
                        : 'bg-white mr-12 border-l-4 border-gray-400 shadow'
            }`;
            
            const roleLabel = document.createElement('div');
            roleLabel.className = 'font-semibold mb-2 flex items-center gap-2';
            const icon = document.createElement('span');
            icon.className = 'w-5 h-5';
            icon.innerHTML = role === 'user' 
                ? '<svg fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/></svg>'
                : '<svg fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"/></svg>';
            roleLabel.appendChild(icon);
            roleLabel.appendChild(document.createTextNode(role === 'user' ? 'You' : 'Dr. Ambedkar AI'));
            
            const messageContent = document.createElement('div');
            messageContent.className = 'text-gray-800 leading-relaxed';
            messageContent.textContent = content;
            
            messageDiv.appendChild(roleLabel);
            messageDiv.appendChild(messageContent);

            if (context && Array.isArray(context)) {
                const contextContainer = document.createElement('div');
                contextContainer.className = 'mt-4 pt-4 border-t border-gray-200';
                
                const contextTitle = document.createElement('div');
                contextTitle.className = 'text-sm font-medium text-gray-500 mb-2';
                contextTitle.textContent = 'References:';
                contextContainer.appendChild(contextTitle);

                context.forEach(item => {
                    if (item.text && item.score > 0.5) {
                        const contextItem = document.createElement('div');
                        contextItem.className = 'text-sm text-gray-600 bg-gray-50 p-2 rounded mt-2';
                        contextItem.textContent = item.text;
                        contextContainer.appendChild(contextItem);
                    }
                });

                messageDiv.appendChild(contextContainer);
            }
            
            return messageDiv;
        }

        chatForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            if (isLoading) return;
            
            const questionInput = document.getElementById('question');
            const question = questionInput.value;
            
            if (!question.trim()) return;
            
            // Show loading state
            isLoading = true;
            const submitButton = chatForm.querySelector('button');
            const originalContent = submitButton.innerHTML;
            submitButton.innerHTML = `<img src="/Spinning_Ashoka_Chakra.gif" alt="Loading" class="loading-spinner">`;
            submitButton.disabled = true;
            
            // Add user message
            chatMessages.appendChild(createMessageElement('user', question));
            questionInput.value = '';
            
            try {
                const response = await fetch(`/chat/${documentKey}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ question }),
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    chatMessages.appendChild(createMessageElement('assistant', data.answer, data.context));
                } else {
                    chatMessages.appendChild(createMessageElement('error', data.error || 'Something went wrong'));
                }
            } catch (error) {
                chatMessages.appendChild(createMessageElement('error', 'Failed to send message'));
            } finally {
                // Reset loading state
                isLoading = false;
                submitButton.innerHTML = originalContent;
                submitButton.disabled = false;
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }
        });
    </script>
</body>
</html>